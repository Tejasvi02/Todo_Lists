{"ast":null,"code":"var _jsxFileName = \"C:\\\\assignment-8-Tejasvi02\\\\todo-ui\\\\src\\\\App\\\\Todos\\\\Todo.js\";\nimport React from 'react';\nimport './Todo.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Todos extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.sample = this.sample.bind(this);\n    this.state = {\n      title: '',\n      description: ''\n    };\n  }\n\n  sample2(t) {\n    fetch('http://localhost:3001/todos/' + t, {\n      method: 'DELETE'\n    }).then(res => res.text()) // or res.json()\n    .then(res => console.log(\"rakkesh\" + res));\n  }\n\n  sample1(t) {\n    //<Update> </Update>\n    console.log(\"update\" + t);\n    const url = 'http://localhost:3001/todos/' + t;\n    const testing = this.state;\n    const myJSON = JSON.stringify(testing);\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8'\n      },\n      body: myJSON\n    };\n    fetch(url, options).then(response => {\n      console.log(response.status);\n    });\n  }\n\n  renderForm(p) {\n    let ut = [...document.getElementsByClassName(p + \"updatetitle\")];\n    let ud = [...document.getElementsByClassName(p + \"updatedesc\")];\n    let us = [...document.getElementsByClassName(p + \"updatesave\")];\n\n    for (let i in ut) {\n      ud[i].removeAttribute(\"hidden\");\n    }\n\n    for (let i in ud) {\n      ud[i].removeAttribute(\"hidden\");\n    }\n\n    for (let i in us) {\n      ud[i].removeAttribute(\"hidden\");\n    }\n  }\n\n  sample(p) {\n    let btnval = [...document.getElementsByClassName(p + \"p1\")];\n    let btnval1 = [...document.getElementsByClassName(p + \"p2\")];\n    let btnval2 = [...document.getElementsByClassName(p + \"p3\")];\n    let cr = [...document.getElementsByClassName(p + \"createdate\")];\n    let ud = [...document.getElementsByClassName(p + \"updatedate\")];\n    console.log(btnval);\n\n    for (let i in btnval) {\n      console.log(btnval[i]);\n      btnval[i].removeAttribute(\"hidden\");\n    }\n\n    for (let i in btnval1) {\n      console.log(btnval1[i]);\n      btnval1[i].removeAttribute(\"hidden\");\n    }\n\n    for (let i in btnval2) {\n      console.log(\"abhinow\" + btnval2[i]);\n      btnval2[i].removeAttribute(\"hidden\");\n\n      for (let i in cr) {\n        cr[i].removeAttribute(\"hidden\");\n      }\n\n      for (let i in ud) {\n        ud[i].removeAttribute(\"hidden\");\n      }\n    }\n  }\n\n  render() {\n    const todoElements = this.props.todos.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divcss\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: c._id + \"btn\",\n        onClick: () => this.sample(c._id),\n        children: [c.title, \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: c._id + \"p1\",\n        hidden: true,\n        children: c.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: c._id + \"createdate\",\n        hidden: true,\n        children: c.createdDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: c._id + \"updatedate\",\n        hidden: true,\n        children: c.lastModifiedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.renderForm(c._id),\n        className: c._id + \"p2\",\n        hidden: true,\n        children: \" Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.sample2(c._id),\n        className: c._id + \"p3\",\n        hidden: true,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 61\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: [\"TODOs\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todoElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/assignment-8-Tejasvi02/todo-ui/src/App/Todos/Todo.js"],"names":["React","Todos","Component","constructor","props","changeHandler","e","setState","target","name","value","sample","bind","state","title","description","sample2","t","fetch","method","then","res","text","console","log","sample1","url","testing","myJSON","JSON","stringify","options","headers","body","response","status","renderForm","p","ut","document","getElementsByClassName","ud","us","i","removeAttribute","btnval","btnval1","btnval2","cr","render","todoElements","todos","map","c","_id","createdDate","lastModifiedDate"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport './Todo.scss';\n\n\nexport class Todos extends React.Component {\n    \n\n    constructor(props) {\n        super(props);   \n        this.sample= this.sample.bind(this);\n        this.state = {\n            title:'',\n            description:''\n          }\n    }\n\n\n\n    sample2(t) {\n       \n        fetch('http://localhost:3001/todos/' + t, {\n  method: 'DELETE',\n})\n.then(res => res.text()) // or res.json()\n.then(res => console.log(\"rakkesh\"+res))\n    }\n\n    changeHandler = e => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    sample1(t) {\n        //<Update> </Update>\n        console.log(\"update\"+t)\n\n        const url = 'http://localhost:3001/todos/'+ t;\n\n        const testing= this.state;\n        const myJSON = JSON.stringify(testing);\n   \n        const options = {\n            method: 'PUT',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        },\n        body: myJSON\n        };\n  \n    fetch(url, options)\n    .then(response => {\n      console.log(response.status);\n    }); \n    }\n\n    renderForm(p){\n        let ut = [...document.getElementsByClassName(p+\"updatetitle\")];\n        let ud = [...document.getElementsByClassName(p+\"updatedesc\")];  \n        let us = [...document.getElementsByClassName(p+\"updatesave\")];  \n        for(let i in ut)\n        {\n            ud[i].removeAttribute(\"hidden\");\n        }\n        for(let i in ud)\n        {\n            ud[i].removeAttribute(\"hidden\");\n        }\n        for(let i in us)\n        {\n            ud[i].removeAttribute(\"hidden\");\n        }   \n\n    }\n  \n\n    sample(p) {\n        \n        let btnval = [...document.getElementsByClassName(p+\"p1\")];\n        let btnval1 = [...document.getElementsByClassName(p+\"p2\")];\n        let btnval2 = [...document.getElementsByClassName(p+\"p3\")];\n        let cr = [...document.getElementsByClassName(p+\"createdate\")];\n        let ud = [...document.getElementsByClassName(p+\"updatedate\")];\n\n               console.log(btnval)\n               for(let i in btnval)\n               {\n                   console.log(btnval[i]);\n                \n                btnval[i].removeAttribute(\"hidden\");\n            }\n            for(let i in btnval1)\n            {\n                console.log(btnval1[i]);\n             \n             btnval1[i].removeAttribute(\"hidden\");\n         }\n         for(let i in btnval2)\n         {\n             console.log(\"abhinow\"+btnval2[i]);\n          \n          btnval2[i].removeAttribute(\"hidden\");\n          for(let i in cr)\n          {\n           \n           cr[i].removeAttribute(\"hidden\");\n       }\n       for(let i in ud)\n       {\n        ud[i].removeAttribute(\"hidden\");\n    }\n      }\n\n        }\n\n    \n\n    render() {\n        \n\n        const todoElements = this.props.todos.map((c, i) => <div className = \"divcss\">\n            <h1 className={c._id + \"btn\"} onClick={() => this.sample(c._id)} key={i}>{c.title} </h1> \n            <p className={c._id + \"p1\"} hidden={true}>{c.description}</p>\n            <p className={c._id + \"createdate\"} hidden={true}>{c.createdDate}</p>\n            <p className={c._id + \"updatedate\"} hidden={true}>{c.lastModifiedDate}</p>\n            {/**/}\n\n            {/*<div>\n            <form onSubmit={this.sample1(c._id)}>\n            <div>\n            <input className={c._id + \"updatetitle\"} hidden={true} type=\"text\" placeholder=\"title\"  name=\"title\"  value={c.title} onChange={this.changeHandler}></input>\n            </div>\n            <div>\n            <input className={c._id + \"updatedesc\"} hidden={true} type=\"text\"  placeholder=\"description\" name=\"description\"  value={c.description} onChange={this.changeHandler}></input>\n            </div>\n            <button className={c._id + \"updatesave\"} hidden={true} type=\"submit\">Save</button>\n            </form>\n            </div>*/}\n                        \n            <button onClick={() => this.renderForm(c._id)}\n            className={c._id + \"p2\"}  hidden={true}  > Update </button> \n            \n            <button onClick={() =>this.sample2(c._id)} className={c._id + \"p3\"} hidden={true}>delete</button>    \n            </div>);\n        \n        return (\n            <div className=\"todo-container\">TODOs\n                <ul>\n                    {todoElements}\n                </ul>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}